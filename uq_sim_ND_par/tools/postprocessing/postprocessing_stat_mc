#!/usr/bin/env python

# script used for getting the quantities of interest (qoi) out of the collective 
# datafile and plot them; for the current setting, the qoi are the displacement
# on the x axis and force 0 and force 1

from os import rename, remove
from sys import argv, exit, stdout
from traceback import print_exc
from os.path import isfile
import numpy as np

newline = '\n'
space = ' '

# postprocessing monte carlo
def postprocessing_mc(datafile, no_of_simulations):

	no_data_points = 0
	displacement_x = []
	forces0 = []
	forces1 = []

	sum_disp_x = 0.
	sum2_disp_x = 0.
	sum_f_x = 0.
	sum2_f_x = 0.
	sum_f_y = 0.
	sum2_f_y = 0.

	sum_displacement_x = []
	sum_forces_x = []
	sum_forces_y = []
	sum2_displacement_x = []
	sum2_forces_x = []
	sum2_forces_y = []

	try:
		with open(datafile, 'r') as input_file:

			for line in input_file:
				if line.startswith("DATA") or line.startswith("Displacements0"):
					continue
				else:
					line_tokens = line.split()

					displacement_x.append(line_tokens[0])
					forces0.append(line_tokens[1])
					forces1.append(line_tokens[2])

					no_data_points += 1

				no_of_timesteps = len(displacement_x)/no_of_simulations

			for i in range(no_of_timesteps):
				for j in range(no_of_simulations):

					sum_disp_x += float(displacement_x[i + no_of_timesteps*j])
					sum2_disp_x += float(displacement_x[i + no_of_timesteps*j])**2

					sum_f_x += float(forces0[i + no_of_timesteps*j])
					sum2_f_x += float(forces0[i + no_of_timesteps*j])**2

					sum_f_y += float(forces1[i + no_of_timesteps*j])
					sum2_f_y += float(forces1[i + no_of_timesteps*j])**2

				sum_displacement_x.append(sum_disp_x)
				sum2_displacement_x.append(sum2_disp_x)
				sum_forces_x.append(sum_f_x)
				sum2_forces_x.append(sum2_f_x)
				sum_forces_y.append(sum_f_y)
				sum2_forces_y.append(sum2_f_y)

				sum_disp_x = 0.
				sum2_disp_x = 0.
				sum_f_x = 0.
				sum2_f_x = 0.
				sum_f_y = 0.
				sum2_f_y = 0.

		input_file.close()
	
	except IOError:
		print_exc(file = stdout)
		exit(0)

	return no_of_timesteps, no_data_points, sum_displacement_x, sum_forces_x, sum_forces_y, sum2_displacement_x, sum2_forces_x, sum2_forces_y

if __name__ == "__main__":

	if len(argv) != 3:
		print "Error in " + argv[0] + "!"
		print "Usage: " + argv[0] + " datafile no_of_simulations"
		exit(0)

	datafile = argv[1]
	no_of_simulations = int(argv[2])

	no_time_steps, no_data_points, sum_displacement_x, sum_forces_x, sum_forces_y, sum2_displacement_x, sum2_forces_x, sum2_forces_y = postprocessing_mc(datafile, no_of_simulations)

	for i in range(no_time_steps):
		stdout.write(str(no_data_points) + space + str(sum_displacement_x[i]) + space + str(sum_forces_x[i]) + space + str(sum_forces_y[i]) + space + str(sum2_displacement_x[i]) + space + str(sum2_forces_x[i]) + space + str(sum2_forces_y[i]) + newline)