#!/usr/bin/env python

# script used for getting the quantities of interest (qoi) out of the collective 
# datafile and plot them; for the current setting, the qoi are the displacement
# on the x axis and force 0 and force 1

from os import rename, remove
from sys import argv, exit, stdout
from traceback import print_exc
from os.path import isfile
import numpy as np

newline = '\n'
space = ' '

# postprocessing monte carlo
def postprocessing_mc(datafile):

	sum_displacement_x = 0.
	sum_forces_x = 0.
	sum_forces_y = 0.
	sum2_displacement_x = 0
	sum2_forces_x = 0
	sum2_forces_y = 0

	valid_lines = 0

	try:
		with open(datafile, 'r') as input_file:
			for line in input_file:
				if line.startswith("DATA") or line.startswith("Time"):
					continue
				else:
					valid_lines += 1
					line_tokens = line.split()

					sum_displacement_x	+= float(line_tokens[3])
					sum2_displacement_x += float(line_tokens[3])**2
					sum_forces_x	+= float(line_tokens[7])
					sum2_forces_x += float(line_tokens[7])**2
					sum_forces_y	+= float(line_tokens[8])
					sum2_forces_y += float(line_tokens[8])**2

		input_file.close()
	
	except IOError:
		print_exc(file = stdout)
		exit(0)

	return valid_lines, sum_displacement_x, sum_forces_x, sum_forces_y, sum2_displacement_x, sum2_forces_x, sum2_forces_y

if __name__ == "__main__":

	if len(argv) != 2:
		print "Error in " + argv[0] + "!"
		print "Usage: " + argv[0] + " datafile"
		exit(0)

	datafile = argv[1]
	if(isfile(datafile)):
		valid_lines, sum_displacement_x, sum_forces_x, sum_forces_y, sum2_displacement_x, sum2_forces_x, sum2_forces_y = postprocessing_mc(datafile)
		stdout.write(str(valid_lines) + space + str(sum_displacement_x) + space + str(sum_forces_x) + space + str(sum_forces_y) + space + str(sum2_displacement_x) + space + str(sum2_forces_x) + space + str(sum2_forces_y) + newline)
	else:
		stdout.write(str(0) + space + str(0) + space + str(0) + space + str(0) + space + str(0) + space + str(0) + space + str(0) + newline)



